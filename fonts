drw.c:	drw->dpy = dpy;
drw.c:	drw->screen = screen;
drw.c:	drw->root = root;
drw.c:	drw->w = w;
drw.c:	drw->h = h;
drw.c:	drw->drawable = XCreatePixmap(dpy, root, w, h, DefaultDepth(dpy, screen));
drw.c:	drw->gc = XCreateGC(dpy, root, 0, NULL);
drw.c:	XSetLineAttributes(dpy, drw->gc, 1, LineSolid, CapButt, JoinMiter);
drw.c:	drw->w = w;
drw.c:	drw->h = h;
drw.c:	if (drw->drawable)
drw.c:		XFreePixmap(drw->dpy, drw->drawable);
drw.c:	drw->drawable = XCreatePixmap(drw->dpy, drw->root, w, h, DefaultDepth(drw->dpy, drw->screen));
drw.c:	XFreePixmap(drw->dpy, drw->drawable);
drw.c:	XFreeGC(drw->dpy, drw->gc);
drw.c:	drw_fontset_free(drw->fonts);
drw.c:		if (!(xfont = XftFontOpenName(drw->dpy, drw->screen, fontname))) {
drw.c:			XftFontClose(drw->dpy, xfont);
drw.c:		if (!(xfont = XftFontOpenPattern(drw->dpy, fontpattern))) {
drw.c://		XftFontClose(drw->dpy, xfont);
drw.c:	font->dpy = drw->dpy;
drw.c:	return (drw->fonts = ret);
drw.c:	if (!XftColorAllocName(drw->dpy, DefaultVisual(drw->dpy, drw->screen),
drw.c:	                       DefaultColormap(drw->dpy, drw->screen),
drw.c:		drw->fonts = set;
drw.c:		drw->scheme = scm;
drw.c:	if (!drw || !drw->scheme)
drw.c:	XSetForeground(drw->dpy, drw->gc, invert ? drw->scheme[ColBg].pixel : drw->scheme[ColFg].pixel);
drw.c:		XFillRectangle(drw->dpy, drw->drawable, drw->gc, x, y, w, h);
drw.c:		XDrawRectangle(drw->dpy, drw->drawable, drw->gc, x, y, w - 1, h - 1);
drw.c:	if (!drw || (render && !drw->scheme) || !text || !drw->fonts)
drw.c:		XSetForeground(drw->dpy, drw->gc, drw->scheme[invert ? ColFg : ColBg].pixel);
drw.c:		XFillRectangle(drw->dpy, drw->drawable, drw->gc, x, y, w, h);
drw.c:		d = XftDrawCreate(drw->dpy, drw->drawable,
drw.c:		                  DefaultVisual(drw->dpy, drw->screen),
drw.c:		                  DefaultColormap(drw->dpy, drw->screen));
drw.c:	usedfont = drw->fonts;
drw.c:			for (curfont = drw->fonts; curfont; curfont = curfont->next) {
drw.c:				charexists = charexists || XftCharExists(drw->dpy, curfont->xfont, utf8codepoint);
drw.c:					XftDrawStringUtf8(d, &drw->scheme[invert ? ColBg : ColFg],
drw.c:			if (!drw->fonts->pattern) {
drw.c:			fcpattern = FcPatternDuplicate(drw->fonts->pattern);
drw.c:			match = XftFontMatch(drw->dpy, drw->screen, fcpattern, &result);
drw.c:				if (usedfont && XftCharExists(drw->dpy, usedfont->xfont, utf8codepoint)) {
drw.c:					for (curfont = drw->fonts; curfont->next; curfont = curfont->next)
drw.c:					usedfont = drw->fonts;
drw.c:	XCopyArea(drw->dpy, drw->drawable, win, drw->gc, x, y, w, h, x, y);
drw.c:	XSync(drw->dpy, False);
drw.c:	if (!drw || !drw->fonts || !text)
drw.c:	cur->cursor = XCreateFontCursor(drw->dpy, shape);
drw.c:	XFreeCursor(drw->dpy, cursor->cursor);
dwm.c:	int boxs = drw->fonts->h / 9;
dwm.c:	int boxw = drw->fonts->h / 6 + 2;
dwm.c:	lrpad = drw->fonts->h;
dwm.c:	bh = user_bh ? user_bh : drw->fonts->h + 2;
