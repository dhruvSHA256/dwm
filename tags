!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
${OBJ}	Makefile	/^${OBJ}: config.h config.mk$/;"	t
-0,0 +1,1202	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -0,0 +1,1202 @@$/;"	h	newFile:b/ipc.c
-0,0 +1,320	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -0,0 +1,320 @@$/;"	h	newFile:b/ipc.h
-0,0 +1,351	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -0,0 +1,351 @@$/;"	h	newFile:b/yajl_dumps.c
-0,0 +1,543	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -0,0 +1,543 @@$/;"	h	newFile:b/dwm-msg.c
-0,0 +1,61	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -0,0 +1,61 @@$/;"	h	newFile:b/IPCClient.h
-0,0 +1,65	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -0,0 +1,65 @@$/;"	h	newFile:b/yajl_dumps.h
-0,0 +1,66	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -0,0 +1,66 @@$/;"	h	newFile:b/IPCClient.c
-1,21 +1,22	patches/patched/dwm-xresources-6.2.diff	/^@@ -1,21 +1,22 @@$/;"	h	modifiedFile:a/config.def.h
-103,7 +103,9	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -103,7 +103,9 @@ static Button buttons[] = {$/;"	h	modifiedFile:a/config.def.h
-103,7 +107,9	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -103,7 +107,9 @@ static Button buttons[] = {$/;"	h	modifiedFile:a/config.def.h
-1077,6 +1097,45	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1077,6 +1097,45 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-1097,7 +1156,9	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1097,7 +1156,9 @@ maprequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-111,8 +125,10	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -111,8 +125,10 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-113,3 +113,22	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -113,3 +113,22 @@ static Button buttons[] = {$/;"	h	modifiedFile:a/config.def.h
-1144,7 +1148,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -1144,7 +1148,8 @@ movemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-116,7 +116,8	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -116,7 +116,8 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-119,6 +119,10	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -119,6 +119,10 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1193,6 +1195,153	patches/patched/dwm-moveresize-20200609-46c8838.diff	/^@@ -1193,6 +1195,153 @@ movemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-12,11 +12,18	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -12,11 +12,18 @@ static const char col_gray2[]       = "#444444";$/;"	h	modifiedFile:a/config.def.h
-122,14 +138,17	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -122,14 +138,17 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1249,6 +1278,16	patches/patched/dwm-cool-autostart-6.2.diff	/^@@ -1249,6 +1278,16 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-129,6 +130,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -129,6 +130,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1299,7 +1304,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -1299,7 +1304,8 @@ resizemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-130,6 +130,7	patches/patched/dwm-alternativetags-6.2.diff	/^@@ -130,6 +130,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1373,12 +1430,40	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -1373,12 +1430,40 @@ restack(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-138,6 +138,7	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -138,6 +138,7 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-1393,7 +1454,9	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1393,7 +1454,9 @@ scan(void)$/;"	h	modifiedFile:a/dwm.c
-1408,6 +1471,29	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1408,6 +1471,29 @@ scan(void)$/;"	h	modifiedFile:a/dwm.c
-141,6 +142,19	patches/patched/dwm-xresources-6.2.diff	/^@@ -141,6 +142,19 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-1477,6 +1483,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -1477,6 +1483,8 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-1487,6 +1495,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -1487,6 +1495,8 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-1498,6 +1517,111	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -1498,6 +1517,111 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-1512,6 +1597,18	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -1512,6 +1597,18 @@ setlayout(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1541,7 +1549,8	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -1541,7 +1549,8 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1545,7 +1545,7	patches/patched/dwm-bar-height-6.2.diff	/^@@ -1545,7 +1545,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1546,7 +1632,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1546,7 +1632,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1547,6 +1549,9	patches/patched/dwm-barpadding-6.2.diff	/^@@ -1547,6 +1549,9 @@ setup(void)$/;"	h	modifiedFile:dwm/dwm.c
-156,6 +156,7	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -156,6 +156,7 @@ static void clientmessage(XEvent *e);$/;"	h	modifiedFile:a/dwm.c
-156,6 +156,7	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -156,6 +156,7 @@ static void clientmessage(XEvent *e);$/;"	h	modifiedFile:a/dwm.c
-1568,7 +1675,8	patches/patched/dwm-status2d-20200508-60bb3df.diff	/^@@ -1568,7 +1675,8 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1569,7 +1578,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -1569,7 +1578,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-157,6 +157,7	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -157,6 +157,7 @@ static void configure(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1573,6 +1578,7	patches/patched/dwm-barpadding-6.2.diff	/^@@ -1573,6 +1578,7 @@ setup(void)$/;"	h	modifiedFile:dwm/dwm.c
-1595,6 +1681,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1595,6 +1681,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1595,8 +1692,37	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -1595,8 +1692,37 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-16,6 +16,11	patches/patched/dwm-colorbar-6.2.diff	/^@@ -16,6 +16,11 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-1619,7 +1629,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -1619,7 +1629,8 @@ showhide(Client *c)$/;"	h	modifiedFile:a/dwm.c
-163,6 +163,7	patches/patched/dwm-status2d-20200508-60bb3df.diff	/^@@ -163,6 +163,7 @@ static void detachstack(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1632,9 +1671,25	patches/patched/dwm-cool-autostart-6.2.diff	/^@@ -1632,9 +1671,25 @@ showhide(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1636,6 +1684,23	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -1636,6 +1684,23 @@ sigchld(int unused)$/;"	h	modifiedFile:a/dwm.c
-1641,6 +1676,10	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -1641,6 +1676,10 @@ spawn(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-165,6 +165,7	patches/dwm-zoomswap-6.2.diff	/^@@ -165,6 +165,7 @@ static void drawbar(Monitor *m);$/;"	h	modifiedFile:a/dwm.c
-1653,6 +1740,13	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1653,6 +1740,13 @@ spawn(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1674,28 +1798,34	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -1674,28 +1798,34 @@ tagmon(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-169,6 +170,7	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -169,6 +170,7 @@ static void focus(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1696,6 +1699,13	patches/patched/dwm-alternativetags-6.2.diff	/^@@ -1696,6 +1699,13 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1701,7 +1707,7	patches/patched/dwm-barpadding-6.2.diff	/^@@ -1701,7 +1707,7 @@ togglebar(const Arg *arg)$/;"	h	modifiedFile:dwm/dwm.c
-1702,9 +1796,18	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1702,9 +1796,18 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1713,7 +1724,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -1713,7 +1724,8 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1719,6 +1720,13	patches/patched/dwm-actualfullscreen-20191112-cb3f58a.diff	/^@@ -1719,6 +1720,13 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-175,6 +194,7	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -175,6 +194,7 @@ static long getstate(Window w);$/;"	h	modifiedFile:a/dwm.c
-1787,10 +1890,41	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1787,10 +1890,41 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-179,6 +181,8	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -179,6 +181,8 @@ static void incnmaster(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-1798,12 +1932,18	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1798,12 +1932,18 @@ unmapnotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-18,6 +18,11	patches/patched/dwm-cool-autostart-6.2.diff	/^@@ -18,6 +18,11 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-180,21 +183,22	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -180,21 +183,22 @@ drw_fontset_free(Fnt *font)$/;"	h	modifiedFile:a/drw.c
-1804,16 +1813,18	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -1804,16 +1813,18 @@ updatebars(void)$/;"	h	modifiedFile:a/dwm.c
-1811,7 +1817,7	patches/patched/dwm-barpadding-6.2.diff	/^@@ -1811,7 +1817,7 @@ updatebars(void)$/;"	h	modifiedFile:dwm/dwm.c
-1826,11 +1832,11	patches/patched/dwm-barpadding-6.2.diff	/^@@ -1826,11 +1832,11 @@ updatebarpos(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c
-1829,11 +1969,11	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1829,11 +1969,11 @@ updatebarpos(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-183,6 +183,8	patches/patched/dwm-moveresize-20200609-46c8838.diff	/^@@ -183,6 +183,8 @@ static void mappingnotify(XEvent *e);$/;"	h	modifiedFile:a/dwm.c
-195,6 +199,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -195,6 +199,7 @@ static void resizemouse(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-1987,8 +2026,10	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -1987,8 +2026,10 @@ updatesizehints(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1987,8 +2052,10	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -1987,8 +2052,10 @@ updatesizehints(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1998,10 +2124,18	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -1998,10 +2124,18 @@ updatestatus(void)$/;"	h	modifiedFile:a/dwm.c
-20,6 +20,7	patches/patched/dwm-alternativetags-6.2.diff	/^@@ -20,6 +20,7 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-20,6 +20,9	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -20,6 +20,9 @@ typedef struct {$/;"	h	modifiedFile:a/drw.h
-20,9 +20,13	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -20,9 +20,13 @@ FREETYPEINC = \/usr\/include\/freetype2$/;"	h	modifiedFile:a/config.mk
-200,6 +204,16	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -200,6 +204,16 @@ static void sendmon(Client *c, Monitor *m);$/;"	h	modifiedFile:a/dwm.c
-201,8 +221,10	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -201,8 +221,10 @@ static void setclientstate(Client *c, long state);$/;"	h	modifiedFile:a/dwm.c
-204,7 +208,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -204,7 +208,7 @@ drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	h	modifiedFile:a/drw.c
-205,6 +207,7	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -205,6 +207,7 @@ static void setup(void);$/;"	h	modifiedFile:a/dwm.c
-207,6 +212,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -207,6 +212,7 @@ static void seturgent(Client *c, int urg);$/;"	h	modifiedFile:a/dwm.c
-2070,13 +2210,35	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -2070,13 +2210,35 @@ wintomon(Window w)$/;"	h	modifiedFile:a/dwm.c
-208,7 +208,7	patches/patched/dwm-xresources-6.2.diff	/^@@ -208,7 +208,7 @@ drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	h	modifiedFile:a/drw.c
-209,6 +210,7	patches/patched/dwm-alternativetags-6.2.diff	/^@@ -209,6 +210,7 @@ static void spawn(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-211,6 +211,7	patches/patched/dwm-actualfullscreen-20191112-cb3f58a.diff	/^@@ -211,6 +211,7 @@ static void tagmon(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-2110,6 +2121,43	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -2110,6 +2121,43 @@ xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	h	modifiedFile:a/dwm.c
-2114,14 +2126,38	patches/dwm-zoomswap-6.2.diff	/^@@ -2114,14 +2126,38 @@ void$/;"	h	modifiedFile:a/dwm.c
-2127,6 +2143,60	patches/patched/dwm-xresources-6.2.diff	/^@@ -2127,6 +2143,60 @@ zoom(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-2139,6 +2194,7	patches/patched/dwm-cool-autostart-6.2.diff	/^@@ -2139,6 +2194,7 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2139,6 +2209,8	patches/patched/dwm-xresources-6.2.diff	/^@@ -2139,6 +2209,8 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-216,6 +222,8	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -216,6 +222,8 @@ static void toggletag(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-22,7 +22,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -22,7 +22,7 @@ FREETYPEINC = \/usr\/include\/freetype2$/;"	h	modifiedFile:a/config.mk
-230,6 +238,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -230,6 +238,7 @@ static void updatewmhints(Client *c);$/;"	h	modifiedFile:a/dwm.c
-232,6 +234,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -232,6 +234,7 @@ static Monitor *wintomon(Window w);$/;"	h	modifiedFile:a/dwm.c
-234,6 +234,7	patches/patched/dwm-cool-autostart-6.2.diff	/^@@ -234,6 +234,7 @@ static int xerror(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-234,6 +248,8	patches/patched/dwm-xresources-6.2.diff	/^@@ -234,6 +248,8 @@ static int xerror(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-235,6 +236,7	patches/dwm-zoomswap-6.2.diff	/^@@ -235,6 +236,7 @@ static int xerrorstart(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-237,6 +238,9	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -237,6 +238,9 @@ static void zoom(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-237,6 +240,9	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -237,6 +240,9 @@ static void zoom(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-237,7 +238,7	patches/patched/dwm-status2d-20200508-60bb3df.diff	/^@@ -237,7 +238,7 @@ static void zoom(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-241,6 +241,8	patches/patched/dwm-barpadding-6.2.diff	/^@@ -241,6 +241,8 @@ static int screen;$/;"	h	modifiedFile:dwm/dwm.c
-241,6 +255,7	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -241,6 +255,7 @@ static char stext[256];$/;"	h	modifiedFile:a/dwm.c
-25,8 +25,11	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -25,8 +25,11 @@ config.h:$/;"	h	modifiedFile:a/Makefile
-26,9 +26,9	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -26,9 +26,9 @@ static const Rule rules[] = {$/;"	h	modifiedFile:a/config.def.h
-260,9 +264,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -260,9 +264,7 @@ drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned in/;"	h	modifiedFile:a/drw.c
-261,17 +283,27	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -261,17 +283,27 @@ static void (*handler[LASTEvent]) (XEvent *) = {$/;"	h	modifiedFile:a/dwm.c
-268,6 +271,11	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -268,6 +271,11 @@ static Drw *drw;$/;"	h	modifiedFile:a/dwm.c
-27,7 +30,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -27,7 +30,7 @@ typedef struct {$/;"	h	modifiedFile:a/drw.h
-275,6 +276,34	patches/patched/dwm-cool-autostart-6.2.diff	/^@@ -275,6 +276,34 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-299,6 +300,7	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -299,6 +300,7 @@ applyrules(Client *c)$/;"	h	modifiedFile:a/dwm.c
-3,6 +3,11	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -3,6 +3,11 @@$/;"	h	modifiedFile:a/config.def.h
-3,6 +3,8	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -3,6 +3,8 @@$/;"	h	modifiedFile:a/util.c
-30,6 +30,7	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -30,6 +30,7 @@$/;"	h	modifiedFile:a/dwm.c
-32,9 +33,9	patches/patched/dwm-xresources-6.2.diff	/^@@ -32,9 +33,9 @@ static const Rule rules[] = {$/;"	h	modifiedFile:a/config.def.h
-33,3 +35,136	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -33,3 +35,136 @@ die(const char *fmt, ...) {$/;"	h	modifiedFile:a/util.c
-36,6 +36,7	patches/patched/dwm-xresources-6.2.diff	/^@@ -36,6 +36,7 @@$/;"	h	modifiedFile:a/dwm.c
-38,8 +41,8	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -38,8 +41,8 @@ unsigned int drw_fontset_getwidth(Drw *drw, const char *text);$/;"	h	modifiedFile:a/drw.h
-38,8 +41,9	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -38,8 +41,9 @@ dist: clean$/;"	h	modifiedFile:a/Makefile
-39,7 +39,7	patches/patched/dwm-xresources-6.2.diff	/^@@ -39,7 +39,7 @@ void drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned /;"	h	modifiedFile:a/drw.h
-4,5 +4,15	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -4,5 +4,15 @@$/;"	h	modifiedFile:a/util.h
-41,6 +41,7	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -41,6 +41,7 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-421,6 +425,7	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -421,6 +425,7 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-439,9 +444,26	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -439,9 +444,26 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-439,9 +445,26	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -439,9 +445,26 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-47,8 +47,8	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -47,8 +47,8 @@$/;"	h	modifiedFile:a/dwm.c
-485,7 +486,7	patches/patched/dwm-status2d-20200508-60bb3df.diff	/^@@ -485,7 +486,7 @@ cleanup(void)$/;"	h	modifiedFile:a/dwm.c
-492,6 +524,12	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -492,6 +524,12 @@ cleanup(void)$/;"	h	modifiedFile:a/dwm.c
-5,6 +5,10	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -5,6 +5,10 @@ static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	h	modifiedFile:a/config.def.h
-5,6 +5,7	patches/patched/dwm-bar-height-6.2.diff	/^@@ -5,6 +5,7 @@ static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	h	modifiedFile:a/config.def.h
-5,6 +5,8	patches/patched/dwm-barpadding-6.2.diff	/^@@ -5,6 +5,8 @@ static const unsigned int borderpx  = 1;$/;"	h	modifiedFile:dwm/config.def.h
-505,8 +514,10	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -505,8 +514,10 @@ cleanupmon(Monitor *mon)$/;"	h	modifiedFile:a/dwm.c
-514,6 +514,7	patches/patched/dwm-focusonnetactive-6.2.diff	/^@@ -514,6 +514,7 @@ clientmessage(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-522,7 +524,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -522,7 +524,8 @@ clientmessage(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-523,8 +524,14	patches/patched/dwm-focusonnetactive-6.2.diff	/^@@ -523,8 +524,14 @@ clientmessage(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-56,9 +57,28	patches/patched/dwm-xresources-6.2.diff	/^@@ -56,9 +57,28 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-566,7 +569,8	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -566,7 +569,8 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-567,7 +569,7	patches/patched/dwm-barpadding-6.2.diff	/^@@ -567,7 +569,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:dwm/dwm.c
-568,7 +579,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -568,7 +579,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-57,6 +57,8	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -57,6 +57,8 @@$/;"	h	modifiedFile:a/dwm.c
-59,6 +59,10	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -59,6 +59,10 @@ static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spaw/;"	h	modifiedFile:a/config.def.h
-59,7 +59,7	patches/patched/dwm-colorbar-6.2.diff	/^@@ -59,7 +59,7 @@$/;"	h	modifiedFile:a/dwm.c
-6,7 +6,7	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -6,7 +6,7 @@ include config.mk$/;"	h	modifiedFile:a/Makefile
-61,7 +61,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -61,7 +61,7 @@ utf8decode(const char *c, long *u, size_t clen)$/;"	h	modifiedFile:a/drw.c
-627,6 +649,19	patches/patched/dwm-statuscmd-6.2.diff	/^@@ -627,6 +649,19 @@ configurerequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-627,6 +650,19	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -627,6 +650,19 @@ configurerequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-639,6 +650,7	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -639,6 +650,7 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-639,6 +654,10	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -639,6 +654,10 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-645,6 +646,23	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -645,6 +646,23 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-649,10 +661,15	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -649,10 +661,15 @@ void$/;"	h	modifiedFile:a/dwm.c
-67,9 +68,21	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -67,9 +68,21 @@ enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default ato/;"	h	modifiedFile:a/dwm.c
-693,6 +694,114	patches/patched/dwm-status2d-20200508-60bb3df.diff	/^@@ -693,6 +694,114 @@ dirtomon(int dir)$/;"	h	modifiedFile:a/dwm.c
-695,7 +697,7	patches/patched/dwm-alternativetags-6.2.diff	/^@@ -695,7 +697,7 @@ dirtomon(int dir)$/;"	h	modifiedFile:a/dwm.c
-696,6 +713,9	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -696,6 +713,9 @@ dirtomon(int dir)$/;"	h	modifiedFile:a/dwm.c
-70,6 +75,22	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^@@ -70,6 +75,22 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-70,8 +70,11	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -70,8 +70,11 @@ drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned in/;"	h	modifiedFile:a/drw.c
-703,7 +703,7	patches/patched/dwm-colorbar-6.2.diff	/^@@ -703,7 +703,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-704,9 +813,7	patches/patched/dwm-status2d-20200508-60bb3df.diff	/^@@ -704,9 +813,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-705,7 +707,7	patches/patched/dwm-barpadding-6.2.diff	/^@@ -705,7 +707,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c
-716,7 +716,7	patches/patched/dwm-colorbar-6.2.diff	/^@@ -716,7 +716,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-716,8 +718,9	patches/patched/dwm-alternativetags-6.2.diff	/^@@ -716,8 +718,9 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-725,17 +725,17	patches/patched/dwm-colorbar-6.2.diff	/^@@ -725,17 +725,17 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-731,12 +733,12	patches/patched/dwm-barpadding-6.2.diff	/^@@ -731,12 +733,12 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c
-76,6 +77,8	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -76,6 +77,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-78,6 +78,22	patches/patched/dwm-moveresize-20200609-46c8838.diff	/^@@ -78,6 +78,22 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-78,6 +78,7	patches/patched/dwm-actualfullscreen-20191112-cb3f58a.diff	/^@@ -78,6 +78,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-780,6 +782,16	patches/dwm-zoomswap-6.2.diff	/^@@ -780,6 +782,16 @@ expose(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-84,6 +85,7	patches/patched/dwm-alternativetags-6.2.diff	/^@@ -84,6 +85,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-87,7 +90,7	patches/patched/dwm-alpha-20180613-b69c870.diff	/^@@ -87,7 +90,7 @@ drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	h	modifiedFile:a/drw.c
-871,6 +907,18	patches/patched/dwm-statuscmd-signal-6.2.diff	/^@@ -871,6 +907,18 @@ getatomprop(Client *c, Atom prop)$/;"	h	modifiedFile:a/dwm.c
-92,6 +92,12	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -92,6 +92,12 @@ Sets monocle layout.$/;"	h	modifiedFile:a/dwm.1
-92,7 +92,7	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^@@ -92,7 +92,7 @@ struct Client {$/;"	h	modifiedFile:a/dwm.c
-964,6 +1002,25	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -964,6 +1002,25 @@ grabkeys(void)$/;"	h	modifiedFile:a/dwm.c
-97,6 +110,7	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^@@ -97,6 +110,7 @@ struct Client {$/;"	h	modifiedFile:a/dwm.c
.c.o	Makefile	/^.c.o:$/;"	t
ARG_TYPE_FLOAT	ipc.h	/^  ARG_TYPE_FLOAT = 3,$/;"	e	enum:ArgType
ARG_TYPE_NONE	ipc.h	/^  ARG_TYPE_NONE = 0,$/;"	e	enum:ArgType
ARG_TYPE_PTR	ipc.h	/^  ARG_TYPE_PTR = 4,$/;"	e	enum:ArgType
ARG_TYPE_SINT	ipc.h	/^  ARG_TYPE_SINT = 2,$/;"	e	enum:ArgType
ARG_TYPE_STR	ipc.h	/^  ARG_TYPE_STR = 5$/;"	e	enum:ArgType
ARG_TYPE_UINT	ipc.h	/^  ARG_TYPE_UINT = 1,$/;"	e	enum:ArgType
Arg	dwm.c	/^} Arg;$/;"	t	typeref:union:__anon0f53a99e060a	file:
ArgFunction	ipc.h	/^typedef union ArgFunction {$/;"	u
ArgFunction	ipc.h	/^} ArgFunction;$/;"	t	typeref:union:ArgFunction
ArgType	ipc.h	/^typedef enum ArgType {$/;"	g
ArgType	ipc.h	/^} ArgType;$/;"	t	typeref:enum:ArgType
BETWEEN	util.h	/^#define BETWEEN(/;"	d
BROWSER	config.h	/^#define BROWSER /;"	d
BUGS	dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUTTONMASK	dwm.c	/^#define BUTTONMASK /;"	d	file:
Button	dwm.c	/^} Button;$/;"	t	typeref:struct:__anon0f53a99e0708	file:
CC	config.mk	/^CC = cc$/;"	m
CFLAGS	config.mk	/^CFLAGS   = -Wunused-function -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Wunused-func/;"	m
CLEANMASK	dwm.c	/^#define CLEANMASK(/;"	d	file:
CPPFLAGS	config.mk	/^CPPFLAGS =  -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -Wunused-function -DVERSIO/;"	m
CUSTOMIZATION	dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
Client	dwm.c	/^struct Client$/;"	s	file:
Client	dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
ClientState	dwm.c	/^struct ClientState$/;"	s	file:
ClientState	dwm.c	/^typedef struct ClientState ClientState;$/;"	t	typeref:struct:ClientState	file:
ClkClientWin	dwm.c	/^    ClkClientWin,$/;"	e	enum:__anon0f53a99e0503	file:
ClkLast	dwm.c	/^    ClkLast$/;"	e	enum:__anon0f53a99e0503	file:
ClkLtSymbol	dwm.c	/^    ClkLtSymbol,$/;"	e	enum:__anon0f53a99e0503	file:
ClkRootWin	dwm.c	/^    ClkRootWin,$/;"	e	enum:__anon0f53a99e0503	file:
ClkStatusText	dwm.c	/^    ClkStatusText,$/;"	e	enum:__anon0f53a99e0503	file:
ClkTagBar	dwm.c	/^    ClkTagBar,$/;"	e	enum:__anon0f53a99e0503	file:
ClkWinTitle	dwm.c	/^    ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
Clr	drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
ColBg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColBorder	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColFg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
Cur	drw.h	/^} Cur;$/;"	t	typeref:struct:__anon0f5116480108
CurLast	dwm.c	/^    CurLast$/;"	e	enum:__anon0f53a99e0103	file:
CurMove	dwm.c	/^    CurMove,$/;"	e	enum:__anon0f53a99e0103	file:
CurNormal	dwm.c	/^    CurNormal,$/;"	e	enum:__anon0f53a99e0103	file:
CurResize	dwm.c	/^    CurResize,$/;"	e	enum:__anon0f53a99e0103	file:
DEBUG	util.h	/^#define DEBUG(/;"	d
DEFAULT_SOCKET_PATH	dwm-msg.c	/^const char *DEFAULT_SOCKET_PATH = "\/tmp\/dwm.sock";$/;"	v	typeref:typename:const char *
DESCRIPTION	dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DWM	dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
Drw	drw.h	/^} Drw;$/;"	t	typeref:struct:__anon0f5116480308
EDITOR	config.h	/^#define EDITOR /;"	d
FLOAT	dwm.c	/^    FLOAT = 2$/;"	e	enum:resource_type	file:
FREETYPEINC	config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
Fnt	drw.h	/^typedef struct Fnt {$/;"	s
Fnt	drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
HEIGHT	dwm.c	/^#define HEIGHT(/;"	d	file:
INCS	config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC} -I${YAJLINC}$/;"	m
INTEGER	dwm.c	/^    INTEGER = 1,$/;"	e	enum:resource_type	file:
INTERSECT	dwm.c	/^#define INTERSECT(/;"	d	file:
IPCCOMMAND	ipc.h	/^#define IPCCOMMAND(/;"	d
IPCClient	IPCClient.h	/^struct IPCClient {$/;"	s
IPCClient	IPCClient.h	/^typedef struct IPCClient IPCClient;$/;"	t	typeref:struct:IPCClient
IPCClientList	IPCClient.h	/^typedef IPCClient *IPCClientList;$/;"	t	typeref:typename:IPCClient *
IPCCommand	ipc.h	/^typedef struct IPCCommand {$/;"	s
IPCCommand	ipc.h	/^} IPCCommand;$/;"	t	typeref:struct:IPCCommand
IPCEvent	ipc.h	/^typedef enum IPCEvent {$/;"	g
IPCEvent	ipc.h	/^} IPCEvent;$/;"	t	typeref:enum:IPCEvent
IPCMessageType	dwm-msg.c	/^typedef enum IPCMessageType {$/;"	g	file:
IPCMessageType	dwm-msg.c	/^} IPCMessageType;$/;"	t	typeref:enum:IPCMessageType	file:
IPCMessageType	ipc.h	/^typedef enum IPCMessageType {$/;"	g
IPCMessageType	ipc.h	/^} IPCMessageType;$/;"	t	typeref:enum:IPCMessageType
IPCParsedCommand	ipc.h	/^typedef struct IPCParsedCommand {$/;"	s
IPCParsedCommand	ipc.h	/^} IPCParsedCommand;$/;"	t	typeref:struct:IPCParsedCommand
IPCSubscriptionAction	ipc.h	/^typedef enum IPCSubscriptionAction {$/;"	g
IPCSubscriptionAction	ipc.h	/^} IPCSubscriptionAction;$/;"	t	typeref:enum:IPCSubscriptionAction
IPC_ACTION_SUBSCRIBE	ipc.h	/^  IPC_ACTION_SUBSCRIBE = 1$/;"	e	enum:IPCSubscriptionAction
IPC_ACTION_UNSUBSCRIBE	ipc.h	/^  IPC_ACTION_UNSUBSCRIBE = 0,$/;"	e	enum:IPCSubscriptionAction
IPC_CLIENT_H_	IPCClient.h	/^#define IPC_CLIENT_H_$/;"	d
IPC_EVENT_CLIENT_FOCUS_CHANGE	dwm-msg.c	/^#define IPC_EVENT_CLIENT_FOCUS_CHANGE /;"	d	file:
IPC_EVENT_CLIENT_FOCUS_CHANGE	ipc.h	/^  IPC_EVENT_CLIENT_FOCUS_CHANGE = 1 << 1,$/;"	e	enum:IPCEvent
IPC_EVENT_FOCUSED_STATE_CHANGE	dwm-msg.c	/^#define IPC_EVENT_FOCUSED_STATE_CHANGE /;"	d	file:
IPC_EVENT_FOCUSED_STATE_CHANGE	ipc.h	/^  IPC_EVENT_FOCUSED_STATE_CHANGE = 1 << 5$/;"	e	enum:IPCEvent
IPC_EVENT_FOCUSED_TITLE_CHANGE	dwm-msg.c	/^#define IPC_EVENT_FOCUSED_TITLE_CHANGE /;"	d	file:
IPC_EVENT_FOCUSED_TITLE_CHANGE	ipc.h	/^  IPC_EVENT_FOCUSED_TITLE_CHANGE = 1 << 4,$/;"	e	enum:IPCEvent
IPC_EVENT_LAYOUT_CHANGE	dwm-msg.c	/^#define IPC_EVENT_LAYOUT_CHANGE /;"	d	file:
IPC_EVENT_LAYOUT_CHANGE	ipc.h	/^  IPC_EVENT_LAYOUT_CHANGE = 1 << 2,$/;"	e	enum:IPCEvent
IPC_EVENT_MONITOR_FOCUS_CHANGE	dwm-msg.c	/^#define IPC_EVENT_MONITOR_FOCUS_CHANGE /;"	d	file:
IPC_EVENT_MONITOR_FOCUS_CHANGE	ipc.h	/^  IPC_EVENT_MONITOR_FOCUS_CHANGE = 1 << 3,$/;"	e	enum:IPCEvent
IPC_EVENT_TAG_CHANGE	dwm-msg.c	/^#define IPC_EVENT_TAG_CHANGE /;"	d	file:
IPC_EVENT_TAG_CHANGE	ipc.h	/^  IPC_EVENT_TAG_CHANGE = 1 << 0,$/;"	e	enum:IPCEvent
IPC_H_	ipc.h	/^#define IPC_H_$/;"	d
IPC_MAGIC	dwm-msg.c	/^#define IPC_MAGIC /;"	d	file:
IPC_MAGIC	ipc.h	/^#define IPC_MAGIC /;"	d
IPC_MAGIC_ARR	dwm-msg.c	/^#define IPC_MAGIC_ARR /;"	d	file:
IPC_MAGIC_ARR	ipc.h	/^#define IPC_MAGIC_ARR /;"	d
IPC_MAGIC_LEN	dwm-msg.c	/^#define IPC_MAGIC_LEN /;"	d	file:
IPC_MAGIC_LEN	ipc.h	/^#define IPC_MAGIC_LEN /;"	d
IPC_SOCKET_BACKLOG	ipc.c	/^static const int IPC_SOCKET_BACKLOG = 5;$/;"	v	typeref:typename:const int	file:
IPC_TYPE_EVENT	dwm-msg.c	/^  IPC_TYPE_EVENT = 6$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_EVENT	ipc.h	/^  IPC_TYPE_EVENT = 6$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_DWM_CLIENT	dwm-msg.c	/^  IPC_TYPE_GET_DWM_CLIENT = 4,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_DWM_CLIENT	ipc.h	/^  IPC_TYPE_GET_DWM_CLIENT = 4,$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_LAYOUTS	dwm-msg.c	/^  IPC_TYPE_GET_LAYOUTS = 3,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_LAYOUTS	ipc.h	/^  IPC_TYPE_GET_LAYOUTS = 3,$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_MONITORS	dwm-msg.c	/^  IPC_TYPE_GET_MONITORS = 1,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_MONITORS	ipc.h	/^  IPC_TYPE_GET_MONITORS = 1,$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_TAGS	dwm-msg.c	/^  IPC_TYPE_GET_TAGS = 2,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_TAGS	ipc.h	/^  IPC_TYPE_GET_TAGS = 2,$/;"	e	enum:IPCMessageType
IPC_TYPE_RUN_COMMAND	dwm-msg.c	/^  IPC_TYPE_RUN_COMMAND = 0,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_RUN_COMMAND	ipc.h	/^  IPC_TYPE_RUN_COMMAND = 0,$/;"	e	enum:IPCMessageType
IPC_TYPE_SUBSCRIBE	dwm-msg.c	/^  IPC_TYPE_SUBSCRIBE = 5,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_SUBSCRIBE	ipc.h	/^  IPC_TYPE_SUBSCRIBE = 5,$/;"	e	enum:IPCMessageType
ISSUES	dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	dwm.c	/^#define ISVISIBLE(/;"	d	file:
Key	dwm.c	/^} Key;$/;"	t	typeref:struct:__anon0f53a99e0808	file:
LDFLAGS	config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LENGTH	dwm.c	/^#define LENGTH(/;"	d	file:
LIBS	config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} ${YAJLLIBS} -lX11-xcb -lxcb -lxcb-res -/;"	m
LOG	dwm.c	/^#define LOG /;"	d	file:
Layout	dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon0f53a99e0908	file:
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX	util.h	/^#define MAX(/;"	d
MAX_MESSAGE_SIZE	ipc.c	/^static const uint32_t MAX_MESSAGE_SIZE = 1000000;$/;"	v	typeref:typename:const uint32_t	file:
MIN	util.h	/^#define MIN(/;"	d
MODKEY	config.h	/^#define MODKEY /;"	d
MOUSEMASK	dwm.c	/^#define MOUSEMASK /;"	d	file:
Monitor	dwm.c	/^struct Monitor$/;"	s	file:
Monitor	dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
NAME	dwm.1	/^.SH NAME$/;"	s	title:DWM
NetActiveWindow	dwm.c	/^    NetActiveWindow,$/;"	e	enum:__anon0f53a99e0303	file:
NetClientList	dwm.c	/^    NetClientList,$/;"	e	enum:__anon0f53a99e0303	file:
NetCurrentDesktop	dwm.c	/^    NetCurrentDesktop,$/;"	e	enum:__anon0f53a99e0303	file:
NetDesktopNames	dwm.c	/^    NetDesktopNames,$/;"	e	enum:__anon0f53a99e0303	file:
NetDesktopViewport	dwm.c	/^    NetDesktopViewport,$/;"	e	enum:__anon0f53a99e0303	file:
NetLast	dwm.c	/^    NetLast$/;"	e	enum:__anon0f53a99e0303	file:
NetNumberOfDesktops	dwm.c	/^    NetNumberOfDesktops,$/;"	e	enum:__anon0f53a99e0303	file:
NetSupported	dwm.c	/^    NetSupported,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMCheck	dwm.c	/^    NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMFullscreen	dwm.c	/^    NetWMFullscreen,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMName	dwm.c	/^    NetWMName,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMState	dwm.c	/^    NetWMState,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowType	dwm.c	/^    NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowTypeDialog	dwm.c	/^    NetWMWindowTypeDialog,$/;"	e	enum:__anon0f53a99e0303	file:
NumTags	dwm.c	/^struct NumTags$/;"	s	file:
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OPAQUE	config.h	/^#define OPAQUE /;"	d
OPTIONS	dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
ResourcePref	dwm.c	/^} ResourcePref;$/;"	t	typeref:struct:__anon0f53a99e0b08	file:
Rule	dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon0f53a99e0a08	file:
SEE	dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SHCMD	config.h	/^#define SHCMD(/;"	d
SRC	Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
STRING	dwm.c	/^    STRING = 0,$/;"	e	enum:resource_type	file:
SYNOPSIS	dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SchemeBarBorder	dwm.c	/^    SchemeBarBorder$/;"	e	enum:__anon0f53a99e0203	file:
SchemeInfoNorm	dwm.c	/^    SchemeInfoNorm,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeInfoSel	dwm.c	/^    SchemeInfoSel,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeNorm	dwm.c	/^    SchemeNorm,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeSel	dwm.c	/^    SchemeSel,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeStatus	dwm.c	/^    SchemeStatus,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeTagsNorm	dwm.c	/^    SchemeTagsNorm,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeTagsSel	dwm.c	/^    SchemeTagsSel,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeTagsUrgent	dwm.c	/^    SchemeTagsUrgent,$/;"	e	enum:__anon0f53a99e0203	file:
TAGKEYS	config.h	/^#define TAGKEYS(/;"	d
TAGMASK	dwm.c	/^#define TAGMASK /;"	d	file:
TAGSLENGTH	dwm.c	/^#define TAGSLENGTH /;"	d	file:
TERMINAL	config.h	/^#define TERMINAL /;"	d
TEXTW	dwm.c	/^#define TEXTW(/;"	d	file:
TagState	dwm.c	/^struct TagState$/;"	s	file:
TagState	dwm.c	/^typedef struct TagState TagState;$/;"	t	typeref:struct:TagState	file:
USAGE	dwm.1	/^.SH USAGE$/;"	s	title:DWM
UTF_INVALID	drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	drw.c	/^#define UTF_SIZ /;"	d	file:
VERSION	config.mk	/^VERSION = 6.2$/;"	m
WIDTH	dwm.c	/^#define WIDTH(/;"	d	file:
WMDelete	dwm.c	/^    WMDelete,$/;"	e	enum:__anon0f53a99e0403	file:
WMLast	dwm.c	/^    WMLast$/;"	e	enum:__anon0f53a99e0403	file:
WMProtocols	dwm.c	/^    WMProtocols,$/;"	e	enum:__anon0f53a99e0403	file:
WMState	dwm.c	/^    WMState,$/;"	e	enum:__anon0f53a99e0403	file:
WMTakeFocus	dwm.c	/^    WMTakeFocus,$/;"	e	enum:__anon0f53a99e0403	file:
Window	dwm-msg.c	/^typedef unsigned long Window;$/;"	t	typeref:typename:unsigned long	file:
X11INC	config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XINERAMAFLAGS	config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
YAJLINC	config.mk	/^YAJLINC = \/usr\/include\/yajl$/;"	m
YAJLLIBS	config.mk	/^YAJLLIBS = -lyajl$/;"	m
YAJL_DUMPS_H_	yajl_dumps.h	/^#define YAJL_DUMPS_H_$/;"	d
YARR	dwm-msg.c	/^#define YARR(/;"	d	file:
YARR	yajl_dumps.h	/^#define YARR(/;"	d
YBOOL	dwm-msg.c	/^#define YBOOL(/;"	d	file:
YBOOL	yajl_dumps.h	/^#define YBOOL(/;"	d
YDOUBLE	dwm-msg.c	/^#define YDOUBLE(/;"	d	file:
YDOUBLE	yajl_dumps.h	/^#define YDOUBLE(/;"	d
YINT	dwm-msg.c	/^#define YINT(/;"	d	file:
YINT	yajl_dumps.h	/^#define YINT(/;"	d
YMAP	dwm-msg.c	/^#define YMAP(/;"	d	file:
YMAP	yajl_dumps.h	/^#define YMAP(/;"	d
YNULL	dwm-msg.c	/^#define YNULL(/;"	d	file:
YNULL	yajl_dumps.h	/^#define YNULL(/;"	d
YSTR	dwm-msg.c	/^#define YSTR(/;"	d	file:
YSTR	yajl_dumps.h	/^#define YSTR(/;"	d
__anon0f5116480108	drw.h	/^typedef struct {$/;"	s
__anon0f5116480203	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	g
__anon0f5116480308	drw.h	/^typedef struct {$/;"	s
__anon0f53a99e0103	dwm.c	/^{$/;"	g	file:
__anon0f53a99e0203	dwm.c	/^{$/;"	g	file:
__anon0f53a99e0303	dwm.c	/^{$/;"	g	file:
__anon0f53a99e0403	dwm.c	/^{$/;"	g	file:
__anon0f53a99e0503	dwm.c	/^{$/;"	g	file:
__anon0f53a99e060a	dwm.c	/^{$/;"	u	file:
__anon0f53a99e0708	dwm.c	/^{$/;"	s	file:
__anon0f53a99e0808	dwm.c	/^{$/;"	s	file:
__anon0f53a99e0908	dwm.c	/^{$/;"	s	file:
__anon0f53a99e0a08	dwm.c	/^{$/;"	s	file:
__anon0f53a99e0b08	dwm.c	/^{$/;"	s	file:
a/Makefile	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^--- a\/Makefile$/;"	m
a/config.def.h	patches/patched/dwm-actualfullscreen-20191112-cb3f58a.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-alpha-20180613-b69c870.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-alternativetags-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-bar-height-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-colorbar-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-cool-autostart-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-moveresize-20200609-46c8838.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-statuscmd-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-statuscmd-signal-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/patched/dwm-xresources-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.mk	patches/patched/dwm-alpha-20180613-b69c870.diff	/^--- a\/config.mk$/;"	m
a/config.mk	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^--- a\/config.mk$/;"	m
a/drw.c	patches/patched/dwm-alpha-20180613-b69c870.diff	/^--- a\/drw.c$/;"	m
a/drw.c	patches/patched/dwm-xresources-6.2.diff	/^--- a\/drw.c$/;"	m
a/drw.h	patches/patched/dwm-alpha-20180613-b69c870.diff	/^--- a\/drw.h$/;"	m
a/drw.h	patches/patched/dwm-xresources-6.2.diff	/^--- a\/drw.h$/;"	m
a/dwm.1	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^--- a\/dwm.1$/;"	m
a/dwm.c	patches/dwm-zoomswap-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-actualfullscreen-20191112-cb3f58a.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-alpha-20180613-b69c870.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-alternativetags-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-bar-height-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-colorbar-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-cool-autostart-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-cyclelayouts-20180524-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-focusonnetactive-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-moveresize-20200609-46c8838.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-selectivefakefullscreen-20200513-f09418b.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-status2d-20200508-60bb3df.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-statuscmd-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-statuscmd-signal-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-vanitygaps-20200610-f09418b.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/patched/dwm-xresources-6.2.diff	/^--- a\/dwm.c$/;"	m
a/util.c	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^--- a\/util.c$/;"	m
a/util.h	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^--- a\/util.h$/;"	m
all	Makefile	/^all: options dwm dwm-msg$/;"	t
alphas	config.h	/^static const unsigned int alphas[][3] = {$/;"	v	typeref:typename:const unsigned int[][3]
altbar_bh	config.h	/^static int altbar_bh                        = 30;    \/* altbar height *\/$/;"	v	typeref:typename:int
altbarclass	config.h	/^static const char *altbarclass              = "Polybar"; \/* Alternate bar class name *\/$/;"	v	typeref:typename:const char *
altbarcmd	config.h	/^static const char *altbarcmd                = "\/home\/dhruv\/.config\/polybar\/launch.sh &"; \//;"	v	typeref:typename:const char *
alttag	dwm.c	/^    unsigned int alttag;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
alttrayname	config.h	/^static const char *alttrayname              = "tray";    \/* Polybar tray instance name *\/$/;"	v	typeref:typename:const char *
applyrules	dwm.c	/^void applyrules(Client *c)$/;"	f	typeref:typename:void
applysizehints	dwm.c	/^int applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
arg	dwm.c	/^    const Arg arg;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:const Arg	file:
arg	dwm.c	/^    const Arg arg;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:const Arg	file:
arg_types	ipc.h	/^  ArgType *arg_types;$/;"	m	struct:IPCCommand	typeref:typename:ArgType *
arg_types	ipc.h	/^  ArgType *arg_types;$/;"	m	struct:IPCParsedCommand	typeref:typename:ArgType *
argc	ipc.h	/^  unsigned int argc;$/;"	m	struct:IPCCommand	typeref:typename:unsigned int
argc	ipc.h	/^  unsigned int argc;$/;"	m	struct:IPCParsedCommand	typeref:typename:unsigned int
args	ipc.h	/^  Arg *args;$/;"	m	struct:IPCParsedCommand	typeref:typename:Arg *
arrange	dwm.c	/^    void (*arrange)(Monitor *);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:void (*)(Monitor *)	file:
arrange	dwm.c	/^void arrange(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	dwm.c	/^void arrangemon(Monitor *m)$/;"	f	typeref:typename:void
array_param	ipc.h	/^  void (*array_param)(const Arg *, int);$/;"	m	union:ArgFunction	typeref:typename:void (*)(const Arg *,int)
aspectresize	dwm.c	/^void aspectresize(const Arg *arg)$/;"	f	typeref:typename:void
attach	dwm.c	/^void attach(Client *c)$/;"	f	typeref:typename:void
attachstack	dwm.c	/^void attachstack(Client *c)$/;"	f	typeref:typename:void
autostart	config.h	/^static const char *const autostart[] = {$/;"	v	typeref:typename:const char * const[]
autostart_exec	dwm.c	/^static void autostart_exec()$/;"	f	typeref:typename:void	file:
autostart_len	dwm.c	/^static size_t autostart_len;$/;"	v	typeref:typename:size_t	file:
autostart_pids	dwm.c	/^static pid_t *autostart_pids;$/;"	v	typeref:typename:pid_t *	file:
b/IPCClient.c	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^+++ b\/IPCClient.c$/;"	n
b/IPCClient.h	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^+++ b\/IPCClient.h$/;"	n
b/dwm-msg.c	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^+++ b\/dwm-msg.c$/;"	n
b/ipc.c	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^+++ b\/ipc.c$/;"	n
b/ipc.h	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^+++ b\/ipc.h$/;"	n
b/yajl_dumps.c	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^+++ b\/yajl_dumps.c$/;"	n
b/yajl_dumps.h	patches/patched/dwm-ipc-20200729-f04cac6.diff	/^+++ b\/yajl_dumps.h$/;"	n
baralpha	config.h	/^static const unsigned int baralpha          = 0xff;$/;"	v	typeref:typename:const unsigned int
barborder	config.h	/^static const unsigned int barborder         = 0;    \/* draw border around bar , overrider drawu/;"	v	typeref:typename:const unsigned int
barborderpx	config.h	/^static const unsigned int barborderpx       = 2;    \/* size of underline under bar*\/$/;"	v	typeref:typename:const unsigned int
barwin	dwm.c	/^    Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
baseh	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
basew	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
bh	dwm.c	/^    int by, bh;         \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
bh	dwm.c	/^static int bh, blw = 0; \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	dwm.c	/^static int bh, blw = 0; \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
borderalpha	config.h	/^static const unsigned int borderalpha       = OPAQUE;$/;"	v	typeref:typename:const unsigned int
borderpx	config.h	/^static unsigned int       borderpx          = 1;    \/* border pixel of windows *\/$/;"	v	typeref:typename:unsigned int
broken	dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
browsercmd	config.h	/^static const char *browsercmd[]  = {BROWSER, NULL};$/;"	v	typeref:typename:const char * []
bstack	layouts/bstack.c	/^static void bstack(Monitor *m) {$/;"	f	typeref:typename:void	file:
buffer	IPCClient.h	/^  char *buffer;$/;"	m	struct:IPCClient	typeref:typename:char *
buffer_size	IPCClient.h	/^  uint32_t buffer_size;$/;"	m	struct:IPCClient	typeref:typename:uint32_t
button	dwm.c	/^    unsigned int button;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
buttonpress	dwm.c	/^void buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttons	config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
bw	dwm.c	/^    int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
by	dwm.c	/^    int by, bh;         \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
centeredfloatingmaster	layouts/centeredfloatingmaster.c	/^void centeredfloatingmaster(Monitor *m) {$/;"	f	typeref:typename:void
centeredmaster	layouts/centeredmaster.c	/^void centeredmaster(Monitor *m) {$/;"	f	typeref:typename:void
cfact	dwm.c	/^    float cfact;$/;"	m	struct:Client	typeref:typename:float	file:
checkotherwm	dwm.c	/^void checkotherwm(void)$/;"	f	typeref:typename:void
class	dwm.c	/^    const char *class;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
clean	Makefile	/^clean:$/;"	t
cleanup	dwm.c	/^void cleanup(void)$/;"	f	typeref:typename:void
cleanupmon	dwm.c	/^void cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
click	dwm.c	/^    unsigned int click;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
clientmessage	dwm.c	/^void clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clients	dwm.c	/^    Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
cmap	drw.h	/^  Colormap cmap;$/;"	m	struct:__anon0f5116480308	typeref:typename:Colormap
cmap	dwm.c	/^static Colormap cmap;$/;"	v	typeref:typename:Colormap	file:
col	layouts/columns.c	/^static void col(Monitor *m) {$/;"	f	typeref:typename:void	file:
col_gray3	config.h	/^static const char         col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray4	config.h	/^static const char         col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
colors	config.h	/^static const char *colors[][3] = {$/;"	v	typeref:typename:const char * [][3]
config.h	Makefile	/^config.h:$/;"	t
configure	dwm.c	/^void configure(Client *c)$/;"	f	typeref:typename:void
configurenotify	dwm.c	/^void configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	dwm.c	/^void configurerequest(XEvent *e)$/;"	f	typeref:typename:void
connect_to_socket	dwm-msg.c	/^connect_to_socket()$/;"	f	typeref:typename:void	file:
copyvalidchars	dwm.c	/^void copyvalidchars(char *text, char *rawtext)$/;"	f	typeref:typename:void
createmon	dwm.c	/^Monitor *createmon(void)$/;"	f	typeref:typename:Monitor *
cursor	drw.h	/^  Cursor cursor;$/;"	m	struct:__anon0f5116480108	typeref:typename:Cursor
cursor	dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
cyclelayout	dwm.c	/^void cyclelayout(const Arg *arg)$/;"	f	typeref:typename:void
defaultgaps	dwm.c	/^void defaultgaps(const Arg *arg) { setgaps(gappoh, gappov, gappih, gappiv); }$/;"	f	typeref:typename:void
depth	drw.h	/^  unsigned int depth;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
depth	dwm.c	/^static int depth;$/;"	v	typeref:typename:int	file:
destroynotify	dwm.c	/^void destroynotify(XEvent *e)$/;"	f	typeref:typename:void
detach	dwm.c	/^void detach(Client *c)$/;"	f	typeref:typename:void
detachstack	dwm.c	/^void detachstack(Client *c)$/;"	f	typeref:typename:void
die	util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
dirtomon	dwm.c	/^Monitor *dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dist	Makefile	/^dist: clean$/;"	t
dmenucmd	config.h	/^static const char *dmenucmd[]    = { "\/home\/dhruv\/.config\/scripts\/dmenu_run\/dmenu_run",NUL/;"	v	typeref:typename:const char * []
dmenufont	config.h	/^static const char         dmenufont[]       = { "JetBrains Mono:pixelsize=18:antialias=true:auto/;"	v	typeref:typename:const char[]
dmenumon	config.h	/^static char dmenumon[2]          = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dpy	drw.h	/^  Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	drw.h	/^  Display *dpy;$/;"	m	struct:__anon0f5116480308	typeref:typename:Display *
dpy	dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy_fd	dwm.c	/^static int dpy_fd;$/;"	v	typeref:typename:int	file:
drawable	drw.h	/^  Drawable drawable;$/;"	m	struct:__anon0f5116480308	typeref:typename:Drawable
drawbar	dwm.c	/^void drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbars	dwm.c	/^void drawbars(void)$/;"	f	typeref:typename:void
drawunderline	config.h	/^static const unsigned int drawunderline     = 1;    \/* draw only underline under bar *\/$/;"	v	typeref:typename:const unsigned int
drw	dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_clr_create	drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname, unsigned int alpha)$/;"	f	typeref:typename:void
drw_create	drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h, Visual *visual/;"	f	typeref:typename:Drw *
drw_cur_create	drw.c	/^Cur *drw_cur_create(Drw *drw, int shape) {$/;"	f	typeref:typename:Cur *
drw_cur_free	drw.c	/^void drw_cur_free(Drw *drw, Cur *cursor) {$/;"	f	typeref:typename:void
drw_font_getexts	drw.c	/^void drw_font_getexts(Fnt *font, const char *text, unsigned int len,$/;"	f	typeref:typename:void
drw_fontset_create	drw.c	/^Fnt *drw_fontset_create(Drw *drw, const char *fonts[], size_t fontcount) {$/;"	f	typeref:typename:Fnt *
drw_fontset_free	drw.c	/^void drw_fontset_free(Fnt *font) {$/;"	f	typeref:typename:void
drw_fontset_getwidth	drw.c	/^unsigned int drw_fontset_getwidth(Drw *drw, const char *text) {$/;"	f	typeref:typename:unsigned int
drw_free	drw.c	/^void drw_free(Drw *drw) {$/;"	f	typeref:typename:void
drw_map	drw.c	/^void drw_map(Drw *drw, Window win, int x, int y, unsigned int w,$/;"	f	typeref:typename:void
drw_rect	drw.c	/^void drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h,$/;"	f	typeref:typename:void
drw_resize	drw.c	/^void drw_resize(Drw *drw, unsigned int w, unsigned int h) {$/;"	f	typeref:typename:void
drw_scm_create	drw.c	/^Clr *drw_scm_create(Drw *drw, const char *clrnames[],$/;"	f	typeref:typename:Clr *
drw_setfontset	drw.c	/^void drw_setfontset(Drw *drw, Fnt *set) {$/;"	f	typeref:typename:void
drw_setscheme	drw.c	/^void drw_setscheme(Drw *drw, Clr *scm) {$/;"	f	typeref:typename:void
drw_text	drw.c	/^int drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h,$/;"	f	typeref:typename:int
dst	dwm.c	/^    void *dst;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:void *	file:
dump_client	yajl_dumps.c	/^dump_client(yajl_gen gen, Client *c)$/;"	f	typeref:typename:int
dump_client_focus_change_event	yajl_dumps.c	/^dump_client_focus_change_event(yajl_gen gen, Client *old_client,$/;"	f	typeref:typename:int
dump_client_state	yajl_dumps.c	/^dump_client_state(yajl_gen gen, const ClientState *state)$/;"	f	typeref:typename:int
dump_error_message	yajl_dumps.c	/^dump_error_message(yajl_gen gen, const char *reason)$/;"	f	typeref:typename:int
dump_focused_state_change_event	yajl_dumps.c	/^dump_focused_state_change_event(yajl_gen gen, const int mon_num,$/;"	f	typeref:typename:int
dump_focused_title_change_event	yajl_dumps.c	/^dump_focused_title_change_event(yajl_gen gen, const int mon_num,$/;"	f	typeref:typename:int
dump_layout_change_event	yajl_dumps.c	/^dump_layout_change_event(yajl_gen gen, const int mon_num,$/;"	f	typeref:typename:int
dump_layouts	yajl_dumps.c	/^dump_layouts(yajl_gen gen, const Layout layouts[], const int layouts_len)$/;"	f	typeref:typename:int
dump_monitor	yajl_dumps.c	/^dump_monitor(yajl_gen gen, Monitor *mon, int is_selected)$/;"	f	typeref:typename:int
dump_monitor_focus_change_event	yajl_dumps.c	/^dump_monitor_focus_change_event(yajl_gen gen, const int last_mon_num,$/;"	f	typeref:typename:int
dump_monitors	yajl_dumps.c	/^dump_monitors(yajl_gen gen, Monitor *mons, Monitor *selmon)$/;"	f	typeref:typename:int
dump_tag	yajl_dumps.c	/^dump_tag(yajl_gen gen, const char *name, const int tag_mask)$/;"	f	typeref:typename:int
dump_tag_event	yajl_dumps.c	/^dump_tag_event(yajl_gen gen, int mon_num, TagState old_state,$/;"	f	typeref:typename:int
dump_tag_state	yajl_dumps.c	/^dump_tag_state(yajl_gen gen, TagState state)$/;"	f	typeref:typename:int
dump_tags	yajl_dumps.c	/^dump_tags(yajl_gen gen, const char *tags[], int tags_len)$/;"	f	typeref:typename:int
dwindle	layouts/fibonacci.c	/^static void dwindle(Monitor *m) { fibonacci(m, 1); }$/;"	f	typeref:typename:void	file:
dwm	Makefile	/^dwm: ${OBJ}$/;"	t
dwm	README.md	/^# dwm$/;"	c
dwm-msg	Makefile	/^dwm-msg: dwm-msg.o$/;"	t
dwm/config.def.h	patches/patched/dwm-barpadding-6.2.diff	/^--- dwm\/config.def.h	2019-12-10 17:24:37.944708263 +1300$/;"	m
dwm/dwm.c	patches/patched/dwm-barpadding-6.2.diff	/^--- dwm\/dwm.c	2019-12-10 17:24:37.945708263 +1300$/;"	m
dwm_ipc_header	dwm-msg.c	/^typedef struct dwm_ipc_header {$/;"	s	file:
dwm_ipc_header	ipc.h	/^typedef struct dwm_ipc_header {$/;"	s
dwm_ipc_header_t	dwm-msg.c	/^} __attribute((packed)) dwm_ipc_header_t;$/;"	t	file:
dwm_ipc_header_t	ipc.h	/^} __attribute((packed)) dwm_ipc_header_t;$/;"	t
dwmblockspid	dwm.c	/^pid_t dwmblockspid = 0;$/;"	v	typeref:typename:pid_t
dwmblockssig	dwm.c	/^static int dwmblockssig;$/;"	v	typeref:typename:int	file:
dwmlog	dwm.c	/^FILE *dwmlog;$/;"	v	typeref:typename:FILE *
ecalloc	util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
editorcmd	config.h	/^static const char *editorcmd[]   = {TERMINAL,"-c",EDITOR,"-e",EDITOR, NULL};$/;"	v	typeref:typename:const char * []
enablegaps	dwm.c	/^static int enablegaps = 1; \/* enables gaps, used by togglegaps *\/$/;"	v	typeref:typename:int	file:
enternotify	dwm.c	/^void enternotify(XEvent *e)$/;"	f	typeref:typename:void
epoll_fd	dwm.c	/^static int epoll_fd;$/;"	v	typeref:typename:int	file:
epoll_fd	ipc.c	/^static int epoll_fd = -1;$/;"	v	typeref:typename:int	file:
event	IPCClient.h	/^  struct epoll_event event;$/;"	m	struct:IPCClient	typeref:struct:epoll_event
expose	dwm.c	/^void expose(XEvent *e)$/;"	f	typeref:typename:void
f	dwm.c	/^    float f;$/;"	m	union:__anon0f53a99e060a	typeref:typename:float	file:
fd	IPCClient.h	/^  int fd;$/;"	m	struct:IPCClient	typeref:typename:int
fibonacci	layouts/fibonacci.c	/^static void fibonacci(Monitor *m, int s) {$/;"	f	typeref:typename:void	file:
floatborderpx	dwm.c	/^        isterminal, noswallow, isfakefullscreen, floatborderpx;$/;"	m	struct:Client	typeref:typename:int	file:
floatborderpx	dwm.c	/^    int floatborderpx;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
floatindicator	config.h	/^static const unsigned int floatindicator    = 0;    \/* draw a rectanglular indicator for floati/;"	v	typeref:typename:const unsigned int
flush_socket_reply	dwm-msg.c	/^flush_socket_reply()$/;"	f	typeref:typename:void	file:
focus	dwm.c	/^void focus(Client *c)$/;"	f	typeref:typename:void
focusin	dwm.c	/^void focusin(XEvent *e)$/;"	f	typeref:typename:void
focusmon	dwm.c	/^void focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	dwm.c	/^void focusstack(const Arg *arg)$/;"	f	typeref:typename:void
fonts	config.h	/^static const char         *fonts[]          = {"Symbols Nerd Font:style=2048-em:size=12","Hurmit/;"	v	typeref:typename:const char * []
fonts	drw.h	/^  Fnt *fonts;$/;"	m	struct:__anon0f5116480308	typeref:typename:Fnt *
func	dwm.c	/^    void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0808	typeref:typename:void (*)(const Arg *)	file:
func	dwm.c	/^    void (*func)(const Arg *arg);$/;"	m	struct:__anon0f53a99e0708	typeref:typename:void (*)(const Arg * arg)	file:
func	ipc.h	/^  ArgFunction func;$/;"	m	struct:IPCCommand	typeref:typename:ArgFunction
gaplessgrid	layouts/gapplessgrid.c	/^void gaplessgrid(Monitor *m) {$/;"	f	typeref:typename:void
gappih	config.h	/^static unsigned int gappih            = 10;   \/* horiz inner gap between windows *\/$/;"	v	typeref:typename:unsigned int
gappih	dwm.c	/^    int gappih;         \/* horizontal gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappiv	config.h	/^static unsigned int gappiv            = 10;   \/* vert inner gap between windows *\/$/;"	v	typeref:typename:unsigned int
gappiv	dwm.c	/^    int gappiv;         \/* vertical gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappoh	config.h	/^static unsigned int gappoh            = 10;   \/* horiz outer gap between windows and screen edg/;"	v	typeref:typename:unsigned int
gappoh	dwm.c	/^    int gappoh;         \/* horizontal outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappov	config.h	/^static unsigned int gappov            = 10;   \/* vert outer gap between windows and screen edge/;"	v	typeref:typename:unsigned int
gappov	dwm.c	/^    int gappov;         \/* vertical outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gc	drw.h	/^  GC gc;$/;"	m	struct:__anon0f5116480308	typeref:typename:GC
get_dwm_client	dwm-msg.c	/^get_dwm_client(Window win)$/;"	f	typeref:typename:int	file:
get_layouts	dwm-msg.c	/^get_layouts()$/;"	f	typeref:typename:int	file:
get_monitors	dwm-msg.c	/^get_monitors()$/;"	f	typeref:typename:int	file:
get_tags	dwm-msg.c	/^get_tags()$/;"	f	typeref:typename:int	file:
getatomprop	dwm.c	/^Atom getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getfacts	dwm.c	/^void getfacts(Monitor *m, int msize, int ssize, float *mf, float *sf, int *mr,$/;"	f	typeref:typename:void
getgaps	dwm.c	/^void getgaps(Monitor *m, int *oh, int *ov, int *ih, int *iv, unsigned int *nc)$/;"	f	typeref:typename:void
getparentprocess	dwm.c	/^pid_t getparentprocess(pid_t p)$/;"	f	typeref:typename:pid_t
getrootptr	dwm.c	/^int getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getstate	dwm.c	/^long getstate(Window w)$/;"	f	typeref:typename:long
gettextprop	dwm.c	/^int gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
goyo	dwm.c	/^void goyo(const Arg *arg)$/;"	f	typeref:typename:void
grabbuttons	dwm.c	/^void grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabkeys	dwm.c	/^void grabkeys(void)$/;"	f	typeref:typename:void
grid	layouts/grid.c	/^void grid(Monitor *m) {$/;"	f	typeref:typename:void
h	drw.h	/^  unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	drw.h	/^  unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
h	dwm.c	/^    int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
handler	dwm.c	/^static void (*handler[LASTEvent])(XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
handlexevent	dwm.c	/^int handlexevent(struct epoll_event *ev)$/;"	f	typeref:typename:int
height	dwm.c	/^    int height;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
horizgrid	layouts/horizgrid.c	/^void horizgrid(Monitor *m) {$/;"	f	typeref:typename:void
i	dwm.c	/^    long i;$/;"	m	union:__anon0f53a99e060a	typeref:typename:long	file:
ignore_reply	dwm-msg.c	/^static unsigned int ignore_reply = 0;$/;"	v	typeref:typename:unsigned int	file:
inch	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
incnmaster	dwm.c	/^void incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incrgaps	dwm.c	/^void incrgaps(const Arg *arg)$/;"	f	typeref:typename:void
incrigaps	dwm.c	/^void incrigaps(const Arg *arg)$/;"	f	typeref:typename:void
incrihgaps	dwm.c	/^void incrihgaps(const Arg *arg)$/;"	f	typeref:typename:void
incrivgaps	dwm.c	/^void incrivgaps(const Arg *arg)$/;"	f	typeref:typename:void
incrogaps	dwm.c	/^void incrogaps(const Arg *arg)$/;"	f	typeref:typename:void
incrohgaps	dwm.c	/^void incrohgaps(const Arg *arg)$/;"	f	typeref:typename:void
incrovgaps	dwm.c	/^void incrovgaps(const Arg *arg)$/;"	f	typeref:typename:void
incw	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
install	Makefile	/^install: all$/;"	t
instance	dwm.c	/^    const char *instance;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
ipc_accept_client	ipc.c	/^ipc_accept_client()$/;"	f	typeref:typename:int
ipc_cleanup	ipc.c	/^ipc_cleanup()$/;"	f	typeref:typename:void
ipc_client_focus_change_event	ipc.c	/^ipc_client_focus_change_event(int mon_num, Client *old_client,$/;"	f	typeref:typename:void
ipc_client_new	IPCClient.c	/^ipc_client_new(int fd)$/;"	f	typeref:typename:IPCClient *
ipc_clients	ipc.c	/^static IPCClientList ipc_clients = NULL;$/;"	v	typeref:typename:IPCClientList	file:
ipc_commands	ipc.c	/^static IPCCommand *ipc_commands;$/;"	v	typeref:typename:IPCCommand *	file:
ipc_commands_len	ipc.c	/^static unsigned int ipc_commands_len;$/;"	v	typeref:typename:unsigned int	file:
ipc_create_socket	ipc.c	/^ipc_create_socket(const char *filename)$/;"	f	typeref:typename:int	file:
ipc_drop_client	ipc.c	/^ipc_drop_client(IPCClient *c)$/;"	f	typeref:typename:int
ipc_event_init_message	ipc.c	/^ipc_event_init_message(yajl_gen *gen)$/;"	f	typeref:typename:void	file:
ipc_event_prepare_send_message	ipc.c	/^ipc_event_prepare_send_message(yajl_gen gen, IPCEvent event)$/;"	f	typeref:typename:void	file:
ipc_event_stoi	ipc.c	/^ipc_event_stoi(const char *subscription, IPCEvent *event)$/;"	f	typeref:typename:int	file:
ipc_focused_state_change_event	ipc.c	/^ipc_focused_state_change_event(const int mon_num, const Window client_id,$/;"	f	typeref:typename:void
ipc_focused_title_change_event	ipc.c	/^ipc_focused_title_change_event(const int mon_num, const Window client_id,$/;"	f	typeref:typename:void
ipc_free_parsed_command_members	ipc.c	/^ipc_free_parsed_command_members(IPCParsedCommand *command)$/;"	f	typeref:typename:void	file:
ipc_get_client	ipc.c	/^ipc_get_client(int fd)$/;"	f	typeref:typename:IPCClient *
ipc_get_dwm_client	ipc.c	/^ipc_get_dwm_client(IPCClient *ipc_client, const char *msg, const Monitor *mons)$/;"	f	typeref:typename:int	file:
ipc_get_ipc_command	ipc.c	/^ipc_get_ipc_command(const char *name, IPCCommand *ipc_command)$/;"	f	typeref:typename:int	file:
ipc_get_layouts	ipc.c	/^ipc_get_layouts(IPCClient *c, const Layout layouts[], const int layouts_len)$/;"	f	typeref:typename:void	file:
ipc_get_monitors	ipc.c	/^ipc_get_monitors(IPCClient *c, Monitor *mons, Monitor *selmon)$/;"	f	typeref:typename:void	file:
ipc_get_sock_fd	ipc.c	/^ipc_get_sock_fd()$/;"	f	typeref:typename:int
ipc_get_tags	ipc.c	/^ipc_get_tags(IPCClient *c, const char *tags[], const int tags_len)$/;"	f	typeref:typename:void	file:
ipc_handle_client_epoll_event	ipc.c	/^ipc_handle_client_epoll_event(struct epoll_event *ev, Monitor *mons,$/;"	f	typeref:typename:int
ipc_handle_socket_epoll_event	ipc.c	/^ipc_handle_socket_epoll_event(struct epoll_event *ev)$/;"	f	typeref:typename:int
ipc_init	ipc.c	/^ipc_init(const char *socket_path, const int p_epoll_fd, IPCCommand commands[],$/;"	f	typeref:typename:int
ipc_is_client_registered	ipc.c	/^ipc_is_client_registered(int fd)$/;"	f	typeref:typename:int
ipc_layout_change_event	ipc.c	/^ipc_layout_change_event(const int mon_num, const char *old_symbol,$/;"	f	typeref:typename:void
ipc_list_add_client	IPCClient.c	/^ipc_list_add_client(IPCClientList *list, IPCClient *nc)$/;"	f	typeref:typename:void
ipc_list_get_client	IPCClient.c	/^ipc_list_get_client(IPCClientList list, int fd)$/;"	f	typeref:typename:IPCClient *
ipc_list_remove_client	IPCClient.c	/^ipc_list_remove_client(IPCClientList *list, IPCClient *c)$/;"	f	typeref:typename:void
ipc_monitor_focus_change_event	ipc.c	/^ipc_monitor_focus_change_event(const int last_mon_num, const int new_mon_num)$/;"	f	typeref:typename:void
ipc_parse_get_dwm_client	ipc.c	/^ipc_parse_get_dwm_client(const char *msg, Window *win)$/;"	f	typeref:typename:int	file:
ipc_parse_run_command	ipc.c	/^ipc_parse_run_command(char *msg, IPCParsedCommand *parsed_command)$/;"	f	typeref:typename:int	file:
ipc_parse_subscribe	ipc.c	/^ipc_parse_subscribe(const char *msg, IPCSubscriptionAction *subscribe,$/;"	f	typeref:typename:int	file:
ipc_prepare_reply_failure	ipc.c	/^ipc_prepare_reply_failure(IPCClient *c, IPCMessageType msg_type,$/;"	f	typeref:typename:void
ipc_prepare_reply_success	ipc.c	/^ipc_prepare_reply_success(IPCClient *c, IPCMessageType msg_type)$/;"	f	typeref:typename:void
ipc_prepare_send_message	ipc.c	/^ipc_prepare_send_message(IPCClient *c, const IPCMessageType msg_type,$/;"	f	typeref:typename:void
ipc_read_client	ipc.c	/^ipc_read_client(IPCClient *c, IPCMessageType *msg_type, uint32_t *msg_size,$/;"	f	typeref:typename:int
ipc_recv_message	ipc.c	/^ipc_recv_message(int fd, uint8_t *msg_type, uint32_t *reply_size,$/;"	f	typeref:typename:int	file:
ipc_reply_init_message	ipc.c	/^ipc_reply_init_message(yajl_gen *gen)$/;"	f	typeref:typename:void	file:
ipc_reply_prepare_send_message	ipc.c	/^ipc_reply_prepare_send_message(yajl_gen gen, IPCClient *c,$/;"	f	typeref:typename:void	file:
ipc_run_command	ipc.c	/^ipc_run_command(IPCClient *ipc_client, char *msg)$/;"	f	typeref:typename:int	file:
ipc_send_events	ipc.c	/^ipc_send_events(Monitor *mons, Monitor **lastselmon, Monitor *selmon)$/;"	f	typeref:typename:void
ipc_subscribe	ipc.c	/^ipc_subscribe(IPCClient *c, const char *msg)$/;"	f	typeref:typename:int	file:
ipc_tag_change_event	ipc.c	/^ipc_tag_change_event(int mon_num, TagState old_state, TagState new_state)$/;"	f	typeref:typename:void
ipc_validate_run_command	ipc.c	/^ipc_validate_run_command(IPCParsedCommand *parsed, const IPCCommand actual)$/;"	f	typeref:typename:int	file:
ipc_write_client	ipc.c	/^ipc_write_client(IPCClient *c)$/;"	f	typeref:typename:ssize_t
ipc_write_message	ipc.c	/^ipc_write_message(int fd, const void *buf, size_t count)$/;"	f	typeref:typename:ssize_t	file:
ipccommands	config.h	/^static IPCCommand ipccommands[] = {$/;"	v	typeref:typename:IPCCommand[]
ipcsockpath	config.h	/^static const char *ipcsockpath = "\/tmp\/dwm.sock";$/;"	v	typeref:typename:const char *
is_float	dwm-msg.c	/^is_float(const char *s)$/;"	f	typeref:typename:int	file:
is_signed_int	dwm-msg.c	/^is_signed_int(const char *s)$/;"	f	typeref:typename:int	file:
is_unsigned_int	dwm-msg.c	/^is_unsigned_int(const char *s)$/;"	f	typeref:typename:int	file:
isdescprocess	dwm.c	/^int isdescprocess(pid_t p, pid_t c)$/;"	f	typeref:typename:int
isfakefullscreen	dwm.c	/^        isterminal, noswallow, isfakefullscreen, floatborderpx;$/;"	m	struct:Client	typeref:typename:int	file:
isfakefullscreen	dwm.c	/^    int isfakefullscreen;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
isfixed	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen,$/;"	m	struct:Client	typeref:typename:int	file:
isfixed	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	typeref:typename:int	file:
isfloating	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen,$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	typeref:typename:int	file:
isfloating	dwm.c	/^    int isfloating;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
isfullscreen	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen,$/;"	m	struct:Client	typeref:typename:int	file:
isfullscreen	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	typeref:typename:int	file:
isgoyo	dwm.c	/^static int isgoyo = 0;$/;"	v	typeref:typename:int	file:
isterminal	dwm.c	/^        isterminal, noswallow, isfakefullscreen, floatborderpx;$/;"	m	struct:Client	typeref:typename:int	file:
isterminal	dwm.c	/^    int isterminal;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
isuniquegeom	dwm.c	/^static int isuniquegeom(XineramaScreenInfo *unique, size_t n,$/;"	f	typeref:typename:int	file:
isurgent	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen,$/;"	m	struct:Client	typeref:typename:int	file:
isurgent	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	typeref:typename:int	file:
keypress	dwm.c	/^void keypress(XEvent *e)$/;"	f	typeref:typename:void
keys	config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keysym	dwm.c	/^    KeySym keysym;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:KeySym	file:
killclient	dwm.c	/^void killclient(const Arg *arg)$/;"	f	typeref:typename:void
lastbutton	dwm.c	/^static char lastbutton[] = "-";$/;"	v	typeref:typename:char[]	file:
lastlt	dwm.c	/^    const Layout *lastlt;$/;"	m	struct:Monitor	typeref:typename:const Layout *	file:
lastltsymbol	dwm.c	/^    char lastltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
lastsel	dwm.c	/^    Client *lastsel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
lastselmon	dwm.c	/^static Monitor *mons, *selmon, *lastselmon;$/;"	v	typeref:typename:Monitor ***	file:
layouts	config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
limitexceeded	dwm.c	/^    char limitexceeded[LENGTH(tags) > 31 ? -1 : 1];$/;"	m	struct:NumTags	typeref:typename:char[]	file:
load_xresources	dwm.c	/^void load_xresources(void)$/;"	f	typeref:typename:void
lrpad	dwm.c	/^static int lrpad;       \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	dwm.c	/^    const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
ltsymbol	dwm.c	/^    char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
magic	dwm-msg.c	/^  uint8_t magic[IPC_MAGIC_LEN];$/;"	m	struct:dwm_ipc_header	typeref:typename:uint8_t[]	file:
magic	ipc.h	/^  uint8_t magic[IPC_MAGIC_LEN];$/;"	m	struct:dwm_ipc_header	typeref:typename:uint8_t[]
main	dwm-msg.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dwm.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	transient.c	/^int main(void) {$/;"	f	typeref:typename:int
manage	dwm.c	/^void manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
managealtbar	dwm.c	/^void managealtbar(Window win, XWindowAttributes *wa)$/;"	f	typeref:typename:void
managetray	dwm.c	/^void managetray(Window win, XWindowAttributes *wa)$/;"	f	typeref:typename:void
mappingnotify	dwm.c	/^void mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
maprequest	dwm.c	/^void maprequest(XEvent *e)$/;"	f	typeref:typename:void
mask	dwm.c	/^    unsigned int mask;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
maxa	dwm.c	/^    float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxh	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mfact	config.h	/^static float mfact      = 0.65; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:float
mfact	dwm.c	/^    float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mh	dwm.c	/^    int mx, my, mw, mh; \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mina	dwm.c	/^    float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
minh	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minw	dwm.c	/^    int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mkdirp	util.c	/^mkdirp(const char *path)$/;"	f	typeref:typename:int
mod	dwm.c	/^    unsigned int mod;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:unsigned int	file:
mon	dwm.c	/^    Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
monitor	dwm.c	/^    int monitor;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
monocle	dwm.c	/^void monocle(Monitor *m)$/;"	f	typeref:typename:void
mons	dwm.c	/^static Monitor *mons, *selmon, *lastselmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	dwm.c	/^void motionnotify(XEvent *e)$/;"	f	typeref:typename:void
movemouse	dwm.c	/^void movemouse(const Arg *arg)$/;"	f	typeref:typename:void
moveresize	dwm.c	/^void moveresize(const Arg *arg)$/;"	f	typeref:typename:void
moveresizeedge	dwm.c	/^void moveresizeedge(const Arg *arg)$/;"	f	typeref:typename:void
mw	dwm.c	/^    int mx, my, mw, mh; \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	dwm.c	/^    int mx, my, mw, mh; \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	dwm.c	/^    int mx, my, mw, mh; \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
name	dwm.c	/^    char *name;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:char *	file:
name	dwm.c	/^    char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
name	ipc.h	/^  char *name;$/;"	m	struct:IPCCommand	typeref:typename:char *
name	ipc.h	/^  char *name;$/;"	m	struct:IPCParsedCommand	typeref:typename:char *
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[][]	file:
neverfocus	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen,$/;"	m	struct:Client	typeref:typename:int	file:
neverfocus	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	typeref:typename:int	file:
next	IPCClient.h	/^  IPCClient *next;$/;"	m	struct:IPCClient	typeref:typename:IPCClient *
next	drw.h	/^  struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	dwm.c	/^    Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	dwm.c	/^    Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
nexttiled	dwm.c	/^Client *nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nmaster	config.h	/^static const int nmaster      = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	dwm.c	/^    int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
normalizepath	util.c	/^normalizepath(const char *path, char **normal)$/;"	f	typeref:typename:int
noswallow	dwm.c	/^        isterminal, noswallow, isfakefullscreen, floatborderpx;$/;"	m	struct:Client	typeref:typename:int	file:
noswallow	dwm.c	/^    int noswallow;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
notitle	config.h	/^static const unsigned int notitle           = 1;    \/* display window name*\/$/;"	v	typeref:typename:const unsigned int
nullterminate	util.c	/^nullterminate(char **str, size_t *len)$/;"	f	typeref:typename:int
num	dwm.c	/^    int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
numlockmask	dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
occupied	dwm.c	/^    int occupied;$/;"	m	struct:TagState	typeref:typename:int	file:
oldbw	dwm.c	/^    int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	dwm.c	/^    int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen,$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm.c	/^    int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	typeref:typename:int	file:
oldw	dwm.c	/^    int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	dwm.c	/^    int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	dwm.c	/^    int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
options	Makefile	/^options:$/;"	t
parentdir	util.c	/^parentdir(const char *path, char **parent)$/;"	f	typeref:typename:int
pattern	drw.h	/^  FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pid	dwm.c	/^    pid_t pid;$/;"	m	struct:Client	typeref:typename:pid_t	file:
pop	dwm.c	/^void pop(Client *c)$/;"	f	typeref:typename:void
prev	IPCClient.h	/^  IPCClient *prev;$/;"	m	struct:IPCClient	typeref:typename:IPCClient *
prevstate	dwm.c	/^    ClientState prevstate;$/;"	m	struct:Client	typeref:typename:ClientState	file:
print_socket_reply	dwm-msg.c	/^print_socket_reply()$/;"	f	typeref:typename:void	file:
print_usage	dwm-msg.c	/^print_usage(const char *name)$/;"	f	typeref:typename:void	file:
propertynotify	dwm.c	/^void propertynotify(XEvent *e)$/;"	f	typeref:typename:void
quit	dwm.c	/^void quit(const Arg *arg)$/;"	f	typeref:typename:void
rawstext	dwm.c	/^static char rawstext[256];$/;"	v	typeref:typename:char[256]	file:
read_socket	dwm-msg.c	/^read_socket(IPCMessageType *msg_type, uint32_t *msg_size, char **msg)$/;"	f	typeref:typename:int	file:
recttomon	dwm.c	/^Monitor *recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
recv_message	dwm-msg.c	/^recv_message(uint8_t *msg_type, uint32_t *reply_size, uint8_t **reply)$/;"	f	typeref:typename:int	file:
resize	dwm.c	/^void resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resizeclient	dwm.c	/^void resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizehints	config.h	/^static const int resizehints  = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizemouse	dwm.c	/^void resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
resource_load	dwm.c	/^void resource_load(XrmDatabase db, char *name, enum resource_type rtype, void *dst)$/;"	f	typeref:typename:void
resource_type	dwm.c	/^enum resource_type$/;"	g	file:
resources	config.h	/^ResourcePref resources[] = {$/;"	v	typeref:typename:ResourcePref[]
restack	dwm.c	/^void restack(Monitor *m)$/;"	f	typeref:typename:void
root	drw.h	/^  Window root;$/;"	m	struct:__anon0f5116480308	typeref:typename:Window
root	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
rules	config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	dwm.c	/^void run(void)$/;"	f	typeref:typename:void
run_command	dwm-msg.c	/^run_command(const char *name, char *args[], int argc)$/;"	f	typeref:typename:int	file:
running	dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
scan	dwm.c	/^void scan(void)$/;"	f	typeref:typename:void
scanner	dwm.c	/^static int scanner;$/;"	v	typeref:typename:int	file:
scantray	dwm.c	/^void scantray(void)$/;"	f	typeref:typename:void
scheme	drw.h	/^  Clr *scheme;$/;"	m	struct:__anon0f5116480308	typeref:typename:Clr *
scheme	dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
screen	drw.h	/^  int screen;$/;"	m	struct:__anon0f5116480308	typeref:typename:int
screen	dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
sel	dwm.c	/^    Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
selected	dwm.c	/^    int selected;$/;"	m	struct:TagState	typeref:typename:int	file:
sellt	dwm.c	/^    unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
selmon	dwm.c	/^static Monitor *mons, *selmon, *lastselmon;$/;"	v	typeref:typename:Monitor **	file:
seltags	dwm.c	/^    unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
send_message	dwm-msg.c	/^send_message(IPCMessageType msg_type, uint32_t msg_size, uint8_t *msg)$/;"	f	typeref:typename:int	file:
sendevent	dwm.c	/^int sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendmon	dwm.c	/^void sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
setcfact	dwm.c	/^void setcfact(const Arg *arg)$/;"	f	typeref:typename:void
setclientstate	dwm.c	/^void setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setcurrentdesktop	dwm.c	/^void setcurrentdesktop(void)$/;"	f	typeref:typename:void
setdesktopnames	dwm.c	/^void setdesktopnames(void)$/;"	f	typeref:typename:void
setfocus	dwm.c	/^void setfocus(Client *c)$/;"	f	typeref:typename:void
setfullscreen	dwm.c	/^void setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setgaps	dwm.c	/^void setgaps(int oh, int ov, int ih, int iv)$/;"	f	typeref:typename:void
setlayout	dwm.c	/^void setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setlayoutsafe	dwm.c	/^void setlayoutsafe(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	dwm.c	/^void setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setnumdesktops	dwm.c	/^void setnumdesktops(void)$/;"	f	typeref:typename:void
setup	dwm.c	/^void setup(void)$/;"	f	typeref:typename:void
setupepoll	dwm.c	/^void setupepoll(void)$/;"	f	typeref:typename:void
seturgent	dwm.c	/^void seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
setviewport	dwm.c	/^void setviewport(void)$/;"	f	typeref:typename:void
sh	dwm.c	/^static int sw, sh;      \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
shiftview	dwm.c	/^void shiftview(const Arg *arg)$/;"	f	typeref:typename:void
showbar	config.h	/^static const int          showbar           = 1;    \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	dwm.c	/^    int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showhide	dwm.c	/^void showhide(Client *c)$/;"	f	typeref:typename:void
sidepad	config.h	/^static int          sidepad           = 1;    \/* horizontal padding of bar *\/$/;"	v	typeref:typename:int
sigchld	dwm.c	/^void sigchld(int unused)$/;"	f	typeref:typename:void
single_param	ipc.h	/^  void (*single_param)(const Arg *);$/;"	m	union:ArgFunction	typeref:typename:void (*)(const Arg *)
size	dwm-msg.c	/^  uint32_t size;$/;"	m	struct:dwm_ipc_header	typeref:typename:uint32_t	file:
size	ipc.h	/^  uint32_t size;$/;"	m	struct:dwm_ipc_header	typeref:typename:uint32_t
smartgaps	config.h	/^static int          smartgaps         = 0;    \/* 1 means no outer gap when there is only one wi/;"	v	typeref:typename:int
snap	config.h	/^static const unsigned int snap              = 3;    \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snext	dwm.c	/^    Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
sock_epoll_event	ipc.c	/^static struct epoll_event sock_epoll_event;$/;"	v	typeref:struct:epoll_event	file:
sock_fd	dwm-msg.c	/^static int sock_fd = -1;$/;"	v	typeref:typename:int	file:
sock_fd	ipc.c	/^static int sock_fd = -1;$/;"	v	typeref:typename:int	file:
sockaddr	ipc.c	/^static struct sockaddr_un sockaddr;$/;"	v	typeref:struct:sockaddr_un	file:
sp	dwm.c	/^static int sp;          \/* side padding for bar *\/$/;"	v	typeref:typename:int	file:
spawn	dwm.c	/^void spawn(const Arg *arg)$/;"	f	typeref:typename:void
spawnbar	dwm.c	/^void spawnbar()$/;"	f	typeref:typename:void
spiral	layouts/fibonacci.c	/^static void spiral(Monitor *m) { fibonacci(m, 0); }$/;"	f	typeref:typename:void	file:
stack	dwm.c	/^    Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
statuscmd	config.h	/^static char *statuscmd[]         = {"\/bin\/sh", "-c", NULL, NULL};$/;"	v	typeref:typename:char * []
statuscmdn	dwm.c	/^static int statuscmdn;$/;"	v	typeref:typename:int	file:
statuscmds	config.h	/^static char *statuscmds[]        = {"notify-send Mouse$BUTTON"};$/;"	v	typeref:typename:char * []
stext	dwm.c	/^static char stext[1024];$/;"	v	typeref:typename:char[1024]	file:
subscribe	dwm-msg.c	/^subscribe(const char *event)$/;"	f	typeref:typename:int	file:
subscriptions	IPCClient.h	/^  int subscriptions;$/;"	m	struct:IPCClient	typeref:typename:int
sw	dwm.c	/^static int sw, sh;      \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
swallow	dwm.c	/^void swallow(Client *p, Client *c)$/;"	f	typeref:typename:void
swallowfloating	config.h	/^static const int          swallowfloating   = 0;    \/* 1 means swallow floating windows by defa/;"	v	typeref:typename:const int
swallowing	dwm.c	/^    Client *swallowing;$/;"	m	struct:Client	typeref:typename:Client *	file:
swallowingclient	dwm.c	/^Client *swallowingclient(Window w)$/;"	f	typeref:typename:Client *
switchurgent	dwm.c	/^void switchurgent(const Arg *arg)$/;"	f	typeref:typename:void
symbol	dwm.c	/^    const char *symbol;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:const char *	file:
tag	dwm.c	/^void tag(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	dwm.c	/^void tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tags	config.h	/^static char *tags[]    = { "", "", "", "", "", "", "ﭮ", "", ""};$/;"	v	typeref:typename:char * []
tags	dwm.c	/^    unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	dwm.c	/^    unsigned int tags;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:
tagsalt	config.h	/^static char *tagsalt[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9"};$/;"	v	typeref:typename:char * []
tagset	dwm.c	/^    unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
tagstate	dwm.c	/^    TagState tagstate;$/;"	m	struct:Monitor	typeref:typename:TagState	file:
tagtoleft	dwm.c	/^void tagtoleft(const Arg *arg)$/;"	f	typeref:typename:void
tagtoright	dwm.c	/^void tagtoright(const Arg *arg)$/;"	f	typeref:typename:void
termcmd	config.h	/^static const char *termcmd[]     = {TERMINAL,NULL};$/;"	v	typeref:typename:const char * []
termforwin	dwm.c	/^Client *termforwin(const Client *w)$/;"	f	typeref:typename:Client *
tile	dwm.c	/^void tile(Monitor *m)$/;"	f	typeref:typename:void
title	dwm.c	/^    const char *title;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
togglealttag	dwm.c	/^void togglealttag()$/;"	f	typeref:typename:void
togglebar	dwm.c	/^void togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	dwm.c	/^void togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscr	dwm.c	/^void togglefullscr(const Arg *arg)$/;"	f	typeref:typename:void
togglegaps	dwm.c	/^void togglegaps(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	dwm.c	/^void toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	dwm.c	/^void toggleview(const Arg *arg)$/;"	f	typeref:typename:void
topbar	config.h	/^static const int          topbar            = 1;    \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	dwm.c	/^    int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
traywin	dwm.c	/^    Window traywin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
tw	dwm.c	/^    int tx, tw;         \/* bar tray geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
tx	dwm.c	/^    int tx, tw;         \/* bar tray geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
type	dwm-msg.c	/^  uint8_t type;$/;"	m	struct:dwm_ipc_header	typeref:typename:uint8_t	file:
type	dwm.c	/^    enum resource_type type;$/;"	m	struct:__anon0f53a99e0b08	typeref:enum:resource_type	file:
type	ipc.h	/^  uint8_t type;$/;"	m	struct:dwm_ipc_header	typeref:typename:uint8_t
ui	dwm.c	/^    unsigned long ui;$/;"	m	union:__anon0f53a99e060a	typeref:typename:unsigned long	file:
unfocus	dwm.c	/^void unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
uninstall	Makefile	/^uninstall:$/;"	t
unmanage	dwm.c	/^void unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmanagealtbar	dwm.c	/^void unmanagealtbar(Window w)$/;"	f	typeref:typename:void
unmanagetray	dwm.c	/^void unmanagetray(Window w)$/;"	f	typeref:typename:void
unmapnotify	dwm.c	/^void unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
unswallow	dwm.c	/^void unswallow(Client *c)$/;"	f	typeref:typename:void
updatebarpos	dwm.c	/^void updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebars	dwm.c	/^void updatebars(void)$/;"	f	typeref:typename:void
updateclientlist	dwm.c	/^void updateclientlist()$/;"	f	typeref:typename:void
updatecurrentdesktop	dwm.c	/^void updatecurrentdesktop(void)$/;"	f	typeref:typename:void
updategeom	dwm.c	/^int updategeom(void)$/;"	f	typeref:typename:int
updatenumlockmask	dwm.c	/^void updatenumlockmask(void)$/;"	f	typeref:typename:void
updatesizehints	dwm.c	/^void updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatestatus	dwm.c	/^void updatestatus(void)$/;"	f	typeref:typename:void
updatetitle	dwm.c	/^void updatetitle(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	dwm.c	/^void updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewmhints	dwm.c	/^void updatewmhints(Client *c)$/;"	f	typeref:typename:void
urgent	dwm.c	/^    int urgent;$/;"	m	struct:TagState	typeref:typename:int	file:
urgenttag	dwm.c	/^unsigned int urgenttag = 1 << 0;$/;"	v	typeref:typename:unsigned int
usage_error	dwm-msg.c	/^usage_error(const char *prog_name, const char *format, ...)$/;"	f	typeref:typename:void	file:
usealtbar	config.h	/^static int usealtbar                        = 1;     \/* 1 means use non-dwm status bar *\/$/;"	v	typeref:typename:int
useargb	dwm.c	/^static int useargb = 0;$/;"	v	typeref:typename:int	file:
user_bh	config.h	/^static const int          user_bh           = 29;   \/* 0 means that dwm will calculate bar heig/;"	v	typeref:typename:const int
utf8decode	drw.c	/^static size_t utf8decode(const char *c, long *u, size_t clen) {$/;"	f	typeref:typename:size_t	file:
utf8decodebyte	drw.c	/^static long utf8decodebyte(const char c, size_t *i) {$/;"	f	typeref:typename:long	file:
utf8validate	drw.c	/^static size_t utf8validate(long *u, size_t i) {$/;"	f	typeref:typename:size_t	file:
utfbyte	drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80, 0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0,$/;"	v	typeref:typename:const unsigned char[]	file:
utfmax	drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF,$/;"	v	typeref:typename:const long[]	file:
utfmin	drw.c	/^static const long utfmin[UTF_SIZ + 1] = {0, 0, 0x80, 0x800, 0x10000};$/;"	v	typeref:typename:const long[]	file:
v	dwm.c	/^    const void *v;$/;"	m	union:__anon0f53a99e060a	typeref:typename:const void *	file:
vertpad	config.h	/^static int          vertpad           = 1;    \/* vertical padding of bar *\/$/;"	v	typeref:typename:int
view	dwm.c	/^void view(const Arg *arg)$/;"	f	typeref:typename:void
viewtoleft	dwm.c	/^void viewtoleft(const Arg *arg)$/;"	f	typeref:typename:void
viewtoright	dwm.c	/^void viewtoright(const Arg *arg)$/;"	f	typeref:typename:void
visual	drw.h	/^  Visual *visual;$/;"	m	struct:__anon0f5116480308	typeref:typename:Visual *
visual	dwm.c	/^static Visual *visual;$/;"	v	typeref:typename:Visual *	file:
vp	dwm.c	/^static int vp;          \/* vertical padding for bar *\/$/;"	v	typeref:typename:int	file:
w	drw.h	/^  unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
w	dwm.c	/^    int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
wh	dwm.c	/^    int wx, wy, ww, wh; \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
width	dwm.c	/^    int width;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
win	dwm.c	/^    Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
winpid	dwm.c	/^pid_t winpid(Window w)$/;"	f	typeref:typename:pid_t
wintoclient	dwm.c	/^Client *wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintomon	dwm.c	/^Monitor *wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
wmclasscontains	dwm.c	/^int wmclasscontains(Window win, const char *class, const char *name)$/;"	f	typeref:typename:int
write_socket	dwm-msg.c	/^write_socket(const void *buf, size_t count)$/;"	f	typeref:typename:ssize_t	file:
ww	dwm.c	/^    int wx, wy, ww, wh; \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	dwm.c	/^    int wx, wy, ww, wh; \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	dwm.c	/^    int wx, wy, ww, wh; \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
x	dwm.c	/^    int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
x	dwm.c	/^    int x;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
xcon	dwm.c	/^static xcb_connection_t *xcon;$/;"	v	typeref:typename:xcb_connection_t *	file:
xerror	dwm.c	/^int xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	dwm.c	/^int xerrordummy(Display *dpy, XErrorEvent *ee) { return 0; }$/;"	f	typeref:typename:int
xerrorstart	dwm.c	/^int xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorxlib	dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfont	drw.h	/^  XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont_create	drw.c	/^static Fnt *xfont_create(Drw *drw, const char *fontname,$/;"	f	typeref:typename:Fnt *	file:
xfont_free	drw.c	/^static void xfont_free(Fnt *font) {$/;"	f	typeref:typename:void	file:
xinitvisual	dwm.c	/^void xinitvisual()$/;"	f	typeref:typename:void
y	dwm.c	/^    int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
y	dwm.c	/^    int y;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
zoom	dwm.c	/^void zoom(const Arg *arg)$/;"	f	typeref:typename:void
